/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hipifif.pfif;

import java.io.File;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author ra1nb0w
 */
public class MainWindow extends javax.swing.JFrame {
	
	private static final String FILE_PATTERN = "([^\\s]+(\\.(?i)(csv))$)";
	private static Pattern pattern;
	private static Matcher matcher;
	
	/**
	 * Creates new form MainWindow
	 */
	public MainWindow() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jFileChooser1 = new javax.swing.JFileChooser();
                jPanel1 = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                menuBar = new javax.swing.JMenuBar();
                fileMenu = new javax.swing.JMenu();
                openMenuItem = new javax.swing.JMenuItem();
                saveMenuItem = new javax.swing.JMenuItem();
                saveAsMenuItem = new javax.swing.JMenuItem();
                exitMenuItem = new javax.swing.JMenuItem();
                editMenu = new javax.swing.JMenu();
                jMenuItem2 = new javax.swing.JMenuItem();
                helpMenu = new javax.swing.JMenu();
                contentsMenuItem = new javax.swing.JMenuItem();
                jMenuItem1 = new javax.swing.JMenuItem();
                aboutMenuItem = new javax.swing.JMenuItem();

                jFileChooser1.setDragEnabled(true);

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("2pfif");
                setMaximumSize(new java.awt.Dimension(200, 200));
                setMinimumSize(new java.awt.Dimension(200, 200));
                setName("2pfif"); // NOI18N
                setResizable(false);

                jLabel1.setText("Drag the file");

                org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                                .add(54, 54, 54)
                                .add(jLabel1)
                                .addContainerGap(58, Short.MAX_VALUE))
                );
                jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                                .add(76, 76, 76)
                                .add(jLabel1)
                                .addContainerGap(88, Short.MAX_VALUE))
                );

                fileMenu.setMnemonic('f');
                fileMenu.setText("File");

                openMenuItem.setMnemonic('o');
                openMenuItem.setText("Open");
                openMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                openMenuItemMousePressed(evt);
                        }
                });
                fileMenu.add(openMenuItem);

                saveMenuItem.setMnemonic('s');
                saveMenuItem.setText("Save");
                saveMenuItem.setEnabled(false);
                fileMenu.add(saveMenuItem);

                saveAsMenuItem.setMnemonic('a');
                saveAsMenuItem.setText("Save As ...");
                saveAsMenuItem.setDisplayedMnemonicIndex(5);
                saveAsMenuItem.setEnabled(false);
                fileMenu.add(saveAsMenuItem);

                exitMenuItem.setMnemonic('x');
                exitMenuItem.setText("Exit");
                exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                exitMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(exitMenuItem);

                menuBar.add(fileMenu);

                editMenu.setMnemonic('e');
                editMenu.setText("Edit");

                jMenuItem2.setText("Preferences");
                jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                jMenuItem2MousePressed(evt);
                        }
                });
                editMenu.add(jMenuItem2);

                menuBar.add(editMenu);

                helpMenu.setMnemonic('h');
                helpMenu.setText("Help");

                contentsMenuItem.setMnemonic('c');
                contentsMenuItem.setText("Help");
                contentsMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                contentsMenuItemMousePressed(evt);
                        }
                });
                helpMenu.add(contentsMenuItem);

                jMenuItem1.setText("License");
                jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                jMenuItem1MousePressed(evt);
                        }
                });
                helpMenu.add(jMenuItem1);

                aboutMenuItem.setMnemonic('a');
                aboutMenuItem.setText("About");
                aboutMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                aboutMenuItemMousePressed(evt);
                        }
                });
                helpMenu.add(aboutMenuItem);

                menuBar.add(helpMenu);

                setJMenuBar(menuBar);

                org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
	    System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

	/*
	 * about dialog
	 */
        private void aboutMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMenuItemMousePressed
		// close the menu selection
		javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath();
		About.main();
        }//GEN-LAST:event_aboutMenuItemMousePressed
	
	/*
	 * chooser dialog
	 */
        private void openMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMenuItemMousePressed
		javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath();
		jFileChooser1.setAcceptAllFileFilterUsed(false);
		jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("csv file", "csv"));
		int ret = jFileChooser1.showOpenDialog(this);
		if ( ret == javax.swing.JFileChooser.APPROVE_OPTION) {
			try {
				CSVReader.Send(jFileChooser1.getSelectedFile().toString());
			} catch (IOException e) {
				System.err.print(e);
			}
		}
        }//GEN-LAST:event_openMenuItemMousePressed

	/*
	 * Help Dialog
	 */
        private void contentsMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contentsMenuItemMousePressed
                javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath();
		Help.main();
        }//GEN-LAST:event_contentsMenuItemMousePressed

	/*
	 * Open License jDialog
	 */
        private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
                javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath();
		License.main();
        }//GEN-LAST:event_jMenuItem1MousePressed

	/*
	 * Preferences jDialog
	 */
        private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
		javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath();
		Preferences.main();
        }//GEN-LAST:event_jMenuItem2MousePressed
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainWindow().setVisible(true);
				// prepare validator
				FileValidator();
				// enable drag and drop method
				DragDrop();
			}
		});
	}
	
	/*
	 * Drag and Drop method
	 * http://www.iharder.net/current/java/filedrop/
	 */
	private static void DragDrop() {
		FileDrop funct = new  FileDrop(jPanel1, new FileDrop.Listener()	{ 
			public void  filesDropped( File[] files ) {
			for ( File file : files ) {
				if (Validate(file.toString())) {
				try {
					CSVReader.Send(file.toString());
				} catch (IOException e) {
					System.err.print(e);
				}
				}
				else {
					JOptionPane.showMessageDialog(null, "File not supported", "Not supported", JOptionPane.ERROR_MESSAGE);
				}
			}
		}
}); 
	}
	
	private static void FileValidator() {
		pattern = Pattern.compile(FILE_PATTERN);
	}
	
	/**
	* Validate image with regular expression
	* @param image image for validation
	* @return true valid image, false invalid image
	*/
	public static boolean Validate(final String file){
	  matcher = pattern.matcher(file);
	  return matcher.matches();
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JMenuItem aboutMenuItem;
        private javax.swing.JMenuItem contentsMenuItem;
        private javax.swing.JMenu editMenu;
        private javax.swing.JMenuItem exitMenuItem;
        private javax.swing.JMenu fileMenu;
        private javax.swing.JMenu helpMenu;
        private javax.swing.JFileChooser jFileChooser1;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JMenuItem jMenuItem1;
        private javax.swing.JMenuItem jMenuItem2;
        private static javax.swing.JPanel jPanel1;
        private javax.swing.JMenuBar menuBar;
        private javax.swing.JMenuItem openMenuItem;
        private javax.swing.JMenuItem saveAsMenuItem;
        private javax.swing.JMenuItem saveMenuItem;
        // End of variables declaration//GEN-END:variables
}
